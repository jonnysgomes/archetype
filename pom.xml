<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>prototype.integration</groupId>
  <artifactId>archetype</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>archetype Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring.version>3.0.6.RELEASE</spring.version>
    <spring-security.version>3.0.6.RELEASE</spring-security.version>
    <junit.version>4.8.2</junit.version>
    <slf4j.version>1.5.10</slf4j.version>
  </properties>
  
  <repositories>
      <repository>
      	<id>central</id>
      	<name>Maven Repository Switchboard</name>
      	<layout>default</layout>
      	<url>http://repo1.maven.org/maven2</url>
      	<snapshots>
        	<enabled>false</enabled>
      	</snapshots>
    </repository>
	<repository>
		<id>repository.jboss.org</id>
		<name>JBoss Repository</name>
		<url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
	</repository>
	<repository>
		<id>prime-repo</id>
		<name>PrimeFaces Maven Repository</name>
		<url>http://repository.primefaces.org</url>
		<layout>default</layout>
	</repository>
  </repositories>
  
  <dependencies>
    <!-- JSF 2.1 Dependencies -->
	<dependency>
    	<groupId>com.sun.faces</groupId>
    	<artifactId>jsf-api</artifactId>
    	<version>2.1.6</version>
	</dependency>
	<dependency>
    	<groupId>com.sun.faces</groupId>
    	<artifactId>jsf-impl</artifactId>
    	<version>2.1.6</version>
	</dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>
	<!-- Primefaces Dependencies -->
	<dependency>
		<groupId>org.primefaces</groupId>
		<artifactId>primefaces</artifactId>
		<version>3.5-SNAPSHOT</version>
	</dependency>
	<!-- JPA 2.0 Persistence Dependencies -->
	<dependency>
    	<groupId>org.hibernate.javax.persistence</groupId>
    	<artifactId>hibernate-jpa-2.0-api</artifactId>
    	<version>1.0.1.Final</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-entitymanager</artifactId>
		<version>3.6.4.Final</version>
		<scope>compile</scope>
	</dependency>
	<dependency>
		<groupId>hsqldb</groupId>
		<artifactId>hsqldb</artifactId>
		<version>1.8.0.10</version>
	</dependency>
	<!-- Hibernate Dependencies -->
	<dependency>
		<groupId>commons-beanutils</groupId>
		<artifactId>commons-beanutils</artifactId>
		<version>20030211.134440</version>
	</dependency>
    <dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2.1</version>
	</dependency>        
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.6.6</version>
	</dependency>
	<!-- MySQL Connection -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.20</version>
	</dependency>
	<!-- Logging Dependencies -->
    <dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>${slf4j.version}</version>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
		<version>${slf4j.version}</version>
		<scope>runtime</scope>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>${slf4j.version}</version>
		<scope>runtime</scope>
	</dependency>
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.15</version>
		<exclusions>
			<exclusion>
				<groupId>com.sun.jdmk</groupId>
				<artifactId>jmxtools</artifactId>
			</exclusion>
			<exclusion>
				<groupId>com.sun.jmx</groupId>
				<artifactId>jmxri</artifactId>
			</exclusion>
		</exclusions>
		<scope>runtime</scope>
	</dependency>
    <!-- Spring + Security dependences -->
    <!-- Core utilities used by other modules.
    	Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*) 
    -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${spring.version}</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<!-- The Spring Expression Language (SpEL for short) is a powerful expression language that 
	 supports querying and manipulating an object graph at runtime.
	 The language syntax is similar to Unified EL but offers additional features, 
	 most notably method invocation and basic string templating functionality. -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-expression</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Support for testing Spring applications with tools such as JUnit and TestNG
    	This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs 
    -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
		<scope>test</scope>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<!-- Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
    	This is the central artifact for Spring's Dependency Injection Container and is generally always defined 
    -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
		<exclusions>
			<!-- Exclude Commons Logging in favor of SLF4j -->
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
   	 	Define this if you use Spring AOP APIs (org.springframework.aop.*) 
   	 -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
    	Define this if you need any of these integrations 
    -->
	<dependency>
  		<groupId>org.springframework</groupId>
  		<artifactId>spring-context-support</artifactId>
  		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aspects</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
    	Define this if you use Spring Transactions or DAO Exception Hierarchy
    	(org.springframework.transaction.*/org.springframework.dao.*) 
    -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jms</artifactId>
		<version>${spring.version}</version>
	</dependency>
    <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
    	Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) 
    -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
    	(depends on spring-core, spring-beans, spring-context, spring-tx)
    	Define this if you need ORM (org.springframework.orm.*) 
    -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Web application development utilities applicable to both Servlet and Portlet Environments
    	(depends on spring-core, spring-beans, spring-context)
    	Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)	
    -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
    	Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
	-->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring.version}</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
		<version>${spring-security.version}</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>${spring-security.version}</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-web</artifactId>
		<version>${spring-security.version}</version>
	</dependency>
	<dependency> <!-- biblioteca de tags para integracao spring3 + jsf2 -->
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-taglibs</artifactId>
		<version>${spring-security.version}</version>
	</dependency>
	<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
    	(depends on spring-core, spring-beans, spring-context)
    	Define this if you need OXM (org.springframework.oxm.*)
	-->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-oxm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- End Spring + Security dependences  -->
	<!-- Test Dependencies -->
	<dependency>
    	<groupId>junit</groupId>
      	<artifactId>junit</artifactId>
      	<version>${junit.version}</version>
      	<scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <finalName>archetype</finalName>
    <plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.3.2</version>
			<configuration>
				<encoding>UTF-8</encoding>
				<source>1.6</source>
				<target>1.6</target>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
			<version>7.4.0.v20110414 </version>
			<configuration>
				<webAppConfig>
					<contextPath>/archetype</contextPath>
				</webAppConfig>
				<scanIntervalSeconds>1</scanIntervalSeconds>
				<connectors>
					<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
						<port>8080</port>
					</connector>
				</connectors>
			</configuration>
			<executions>
				<execution>
					<id>start-jetty</id>
					<phase>install</phase>
					<goals>
						<goal>run</goal>
					</goals>
					<configuration>
						<scanIntervalSeconds>1</scanIntervalSeconds>
						<daemon>false</daemon>
					</configuration>
				</execution>
			</executions>
		</plugin>
	</plugins>
  </build>
</project>
